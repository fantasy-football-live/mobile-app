{"version":3,"sources":["webpack:///./src/app/Models/BaseLeague.ts","webpack:///./src/app/Models/CustomLeague.ts","webpack:///./src/app/Models/League.ts","webpack:///./src/app/Services/bonus-point/bonus-point.service.ts","webpack:///./src/app/Services/fantasy-player/fantasy-player.service.ts","webpack:///./src/app/Services/gameweek-data/gameweek-data.service.ts","webpack:///./src/app/Services/gameweek-history/gameweek-history.service.ts","webpack:///./src/app/Services/leagues/custom-league.service.ts","webpack:///./src/app/Services/leagues/leagues.service.ts","webpack:///./src/app/Services/live-data/live.data.service.ts","webpack:///./src/app/Services/main-user/main-user.service.ts"],"names":[],"mappings":"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","file":"default~Pages-Home-home-module~Pages-Leagues-leagues-list-leagues-module~Pages-Settings-settings-mod~d134829c.js","sourcesContent":["export default class BaseLeague {\n\tid: number;\n\tname: string;\n\n\tconstructor(id: number, name: string) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t}\n}\n","import BaseLeague from './BaseLeague';\n\nexport default class CustomLeague extends BaseLeague {\n\tmembers: number[];\n\n\tconstructor(id: number, name: string, members: number[]) {\n\t\tsuper(id, name);\n\t\tthis.members = members;\n\t}\n}\n","import FantasyPlayer from './FantasyPlayer';\nimport BaseLeague from './BaseLeague';\nexport default class League extends BaseLeague {\n\tmembers: Map<number, FantasyPlayer>;\n\n\tconstructor(id = -1, name = '', members = new Map<number, FantasyPlayer>()) {\n\t\tsuper(id, name);\n\t\tthis.members = members;\n\t}\n\n\tsort() {\n\t\treturn Array.from(this.members.values()).sort(\n\t\t\t(a, b) => b.team.overallPoints - a.team.overallPoints\n\t\t);\n\t}\n}\n","import { Injectable, OnInit } from '@angular/core';\nimport { Storage } from '@ionic/storage';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class BonusPointService implements OnInit {\n\tinlcudeBonusPoints: boolean;\n\n\tconstructor(private storage: Storage) {}\n\n\tngOnInit(): void {\n\t\tthis.storage.get('include-bonus-points').then((include) => {\n\t\t\tthis.inlcudeBonusPoints = include;\n\t\t});\n\t}\n\n\tasync getUserSetting(): Promise<boolean> {\n\t\tconst inlcude = await this.storage.get('include-bonus-points');\n\t\treturn inlcude;\n\t}\n\n\tincludeBonusPoints(val = true): void {\n\t\tthis.updateSetting(val);\n\t}\n\n\tupdateSetting(val: boolean): void {\n\t\tthis.storage.set('include-bonus-points', val);\n\t}\n\n\t/**\n\t *\n\t * @param fixtures array of gameweek fixtures\n\t * @param id player id we are looking for\n\t */\n\tpublic parseLiveBonusPoints(fixtures: any, id: number): number {\n\t\tlet totalPointsBonus = 0;\n\n\t\tfor (const fixture of fixtures) {\n\t\t\tfor (const stat of fixture.stats) {\n\t\t\t\t// change to bps from stat and calculate top 3 players\n\t\t\t\tif (stat && stat.bps) {\n\t\t\t\t\tconst matchBPS: Map<Number, []> = new Map();\n\t\t\t\t\tconst topBps = {\n\t\t\t\t\t\tfirst: 0,\n\t\t\t\t\t\tsecond: 0,\n\t\t\t\t\t\tthird: 0\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.parseBonusPointData(stat.bps.a, topBps, matchBPS);\n\t\t\t\t\tthis.parseBonusPointData(stat.bps.h, topBps, matchBPS);\n\n\t\t\t\t\tconst topBonusPlayers = matchBPS.get(topBps.first);\n\t\t\t\t\tconst secondBonusPlayers = matchBPS.get(topBps.second);\n\t\t\t\t\tconst thirdBonusPlayers = matchBPS.get(topBps.third);\n\n\t\t\t\t\tconst finalBPS = [ [], [], [] ];\n\n\t\t\t\t\t/**\n\t\t\t\t\t * rules for how bonus points are give is defined at https://fantasy.premierleague.com/a/help\n\t\t\t\t\t * index 0 corresponds to 1 bonus point\n\t\t\t\t\t * index 1 => 2 bonus points\n\t\t\t\t\t * index 2 => 3 bonus points\n\t\t\t\t\t */\n\t\t\t\t\tif (topBonusPlayers && topBonusPlayers.length > 1) {\n\t\t\t\t\t\t// tie at the top so top players get 3 points and second gets one\n\t\t\t\t\t\tfinalBPS[2] = topBonusPlayers;\n\t\t\t\t\t\tfinalBPS[0] = secondBonusPlayers;\n\t\t\t\t\t} else if (secondBonusPlayers && secondBonusPlayers.length > 1) {\n\t\t\t\t\t\t// tie in 2nd so top player gets 3 and tied players get 2, no 1 bonus point given\n\t\t\t\t\t\tfinalBPS[2] = topBonusPlayers;\n\t\t\t\t\t\tfinalBPS[1] = secondBonusPlayers;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfinalBPS[0] = thirdBonusPlayers;\n\t\t\t\t\t\tfinalBPS[1] = secondBonusPlayers;\n\t\t\t\t\t\tfinalBPS[2] = topBonusPlayers;\n\t\t\t\t\t}\n\n\t\t\t\t\t// check if current player has bonus points attributed to him\n\t\t\t\t\tfor (let i = 0; i < finalBPS.length; i++) {\n\t\t\t\t\t\tconst curr = finalBPS[i];\n\t\t\t\t\t\tfor (const player of curr) {\n\t\t\t\t\t\t\tif (player.element === id) {\n\t\t\t\t\t\t\t\ttotalPointsBonus += i + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn totalPointsBonus;\n\t}\n\n\t/**\n\t *\n\t * @param data {Array} an array of players with their live BPS points\n\t * @param bps object that stores the values of the 1st, 2nd and 3rd highest scores\n\t * @param matchBPS Map of BPS values to players\n\t */\n\tprivate parseBonusPointData(data: any[], bps: any, matchBPS: Map<Number, any[]>): void {\n\t\tfor (const player of data) {\n\t\t\tconst value = player.value;\n\t\t\tconst arr: any[] = matchBPS.get(value) || [];\n\t\t\tarr.push(player);\n\t\t\tmatchBPS.set(player.value, arr);\n\n\t\t\tif (value > bps.first) {\n\t\t\t\tbps.third = bps.second;\n\t\t\t\tbps.second = bps.first;\n\t\t\t\tbps.first = value;\n\t\t\t} else if (value > bps.second && value !== bps.first) {\n\t\t\t\tbps.third = bps.second;\n\t\t\t\tbps.second = value;\n\t\t\t} else if (value > bps.third && value !== bps.first && value !== bps.second) {\n\t\t\t\tbps.third = value;\n\t\t\t}\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport FantasyPlayer from 'src/app/Models/FantasyPlayer';\nimport SoccerPlayer from 'src/app/Models/SoccerPlayer';\nimport Team from 'src/app/Models/Team';\nimport { GameweekDataService } from '../gameweek-data/gameweek-data.service';\nimport { GameweekHistoryService } from '../gameweek-history/gameweek-history.service';\nimport { SoccerPlayerService } from '../soccer-player/soccerplayer.service';\nimport { Storage } from '@ionic/storage';\nimport { BonusPointService } from '../bonus-point/bonus-point.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class FantasyPlayerService {\n\tpositionMap = {\n\t\t1: 'Goalkeeper',\n\t\t2: 'Defender',\n\t\t3: 'Midfielder',\n\t\t4: 'Forward'\n\t};\n\n\tconstructor(\n\t\tprivate gameweekDataService: GameweekDataService,\n\t\tprivate gameweekHistoryService: GameweekHistoryService,\n\t\tprivate soccerPlayerService: SoccerPlayerService,\n\t\tprivate storage: Storage,\n\t\tprivate bonusPointService: BonusPointService\n\t) {}\n\n\t/**\n   *\n   * @param id fpl id\n   * @description creates a fantasy premier league player\n   * @returns FantasyPlayer object\n   */\n\tasync createPlayer(\n\t\tid: number,\n\t\tliveData: any,\n\t\tsoccerPlayers: Map<number, any>,\n\t\tcurrentGameweek: number\n\t): Promise<FantasyPlayer> {\n\t\tconst key = `id-${id} gameweek-${currentGameweek}`;\n\t\t// tslint:disable-next-line: prefer-const\n\t\tlet stored = await this.storage.get(key),\n\t\t\tuserGameweekData = null,\n\t\t\tplayerData = null,\n\t\t\tteam = null,\n\t\t\tpreviousGameweeksHistory = null,\n\t\t\tnewFantasyPlayer = null;\n\n\t\tif (!stored) {\n\t\t\tuserGameweekData = await this.gameweekDataService.getGameweekData(id, currentGameweek);\n\t\t\tpreviousGameweeksHistory = await this.gameweekHistoryService.fetch(id);\n\t\t\tplayerData = this.parsePlayerData(\n\t\t\t\tuserGameweekData,\n\t\t\t\tpreviousGameweeksHistory,\n\t\t\t\tcurrentGameweek\n\t\t\t),\n\t\t\tteam = new Team(id, playerData.teamName, playerData.lastWeekOverallPoints),\n\t\t\tnewFantasyPlayer = new FantasyPlayer(\n\t\t\t\t\tplayerData.activeChip,\n\t\t\t\t\tplayerData.bank,\n\t\t\t\t\tplayerData.value,\n\t\t\t\t\tplayerData.countryImage,\n\t\t\t\t\t0,\n\t\t\t\t\tplayerData.gameweekTransfers,\n\t\t\t\t\tplayerData.gameweekTransfersCost,\n\t\t\t\t\tid,\n\t\t\t\t\tplayerData.leagues,\n\t\t\t\t\tplayerData.name,\n\t\t\t\t\tplayerData.overallRank,\n\t\t\t\t\tteam\n\t\t\t);\n\n\t\t\tthis.storage.set(key, {\n\t\t\t\tuserGameweekData,\n\t\t\t\tpreviousGameweeksHistory,\n\t\t\t\tplayerData,\n\t\t\t\tteam,\n\t\t\t\tnewFantasyPlayer\n\t\t\t});\n\n\t\t} else {\n\t\t\tuserGameweekData = stored.userGameweekData;\n\t\t\tpreviousGameweeksHistory = stored.previousGameweeksHistory;\n\t\t\tplayerData = stored.playerData;\n\t\t\tteam = new Team(id, playerData.teamName, playerData.lastWeekOverallPoints);\n\t\t\tnewFantasyPlayer = stored.newFantasyPlayer;\n\t\t\tnewFantasyPlayer.team = team;\n\t\t}\n\n\t\tthis.populateSquad(playerData.picks, newFantasyPlayer, liveData, soccerPlayers);\n\t\treturn newFantasyPlayer;\n\t}\n\n\t/**\n\t * extracts relevant data from objects return from FPL API\n\t * @param userGameweekData {}\n\t * @param previousGameweekHistory {}\n\t * @param currentGameweek {number}\n\t */\n\tprivate parsePlayerData(\n\t\tuserGameweekData: any,\n\t\tpreviousGameweekHistory: any,\n\t\tcurrentGameweek: number\n\t) {\n\t\tconst leagues = previousGameweekHistory.leagues.classic,\n\t\t\tactiveChip = userGameweekData.active_chip,\n\t\t\tname = `${previousGameweekHistory.entry.player_first_name} ${previousGameweekHistory\n\t\t\t\t.entry.player_last_name}`,\n\t\t\tcountryImage = `assets/country_flags/${previousGameweekHistory.entry\n\t\t\t\t.player_region_short_iso}.gif`,\n\t\t\tteamName = previousGameweekHistory.entry.name,\n\t\t\tlastWeekOverallPoints = previousGameweekHistory.history.find(\n\t\t\t\t(gameweek) => gameweek.event === currentGameweek - 1\n\t\t\t).total_points,\n\t\t\tpicks = userGameweekData.picks,\n\t\t\tvalue = userGameweekData.entry_history.value,\n\t\t\tbank = userGameweekData.entry_history.bank,\n\t\t\tgameweekTransfers = userGameweekData.entry_history.event_transfers,\n\t\t\tgameweekTransfersCost = userGameweekData.entry_history.event_transfers_cost,\n\t\t\toverallRank = previousGameweekHistory.history.pop().overall_rank;\n\n\t\treturn {\n\t\t\tleagues,\n\t\t\tactiveChip,\n\t\t\tname,\n\t\t\tcountryImage,\n\t\t\tteamName,\n\t\t\tlastWeekOverallPoints,\n\t\t\tpicks,\n\t\t\tbank,\n\t\t\tvalue,\n\t\t\tgameweekTransfers,\n\t\t\tgameweekTransfersCost,\n\t\t\toverallRank\n\t\t};\n\t}\n\n\tprivate populateSquad(\n\t\tpicks: any[],\n\t\tfantasyPlayer: FantasyPlayer,\n\t\tliveData: any,\n\t\tplayers: Map<number, any>\n\t) {\n\t\t// tslint:disable-next-line: prefer-const\n\t\tlet totalPoints = 0;\n\t\tconst livePlayerData = liveData['elements'];\n\t\tconst liveFixturesData = liveData['fixtures'];\n\t\tfor (const pick of picks) {\n\t\t\tconst currentPlayer = players.get(pick.element),\n\t\t\t\tposition = this.positionMap[currentPlayer.element_type],\n\t\t\t\timage = this.soccerPlayerService.getPhotoUrl(currentPlayer.id, players),\n\t\t\t\tplayerStats = livePlayerData[currentPlayer.id]['stats'],\n\t\t\t\tcurrentPlayerGWPoints =\n\t\t\t\t\tplayerStats['total_points'] -\n\t\t\t\t\tplayerStats['bonus'] +\n\t\t\t\t\tthis.bonusPointService.parseLiveBonusPoints(liveFixturesData, currentPlayer.id),\n\t\t\t\tnewPlayer = new SoccerPlayer(\n\t\t\t\t\tpick.element,\n\t\t\t\t\timage,\n\t\t\t\t\tnull,\n\t\t\t\t\tcurrentPlayerGWPoints,\n\t\t\t\t\tcurrentPlayer.web_name,\n\t\t\t\t\tposition\n\t\t\t\t);\n\n\t\t\t// calculate total gameweek points\n\t\t\tif (fantasyPlayer.activeChip === 'bboost' || pick.position < 12) {\n\t\t\t\ttotalPoints += currentPlayerGWPoints * pick.multiplier;\n\t\t\t}\n\n\t\t\t// add players to position arrays\n\t\t\tif (pick.position < 12) {\n\t\t\t\tfantasyPlayer.team[`${position}s`].push(newPlayer);\n\t\t\t} else {\n\t\t\t\tfantasyPlayer.team[`Bench`].push(newPlayer);\n\t\t\t}\n\n\t\t\tif (pick.is_captain) {\n\t\t\t\tnewPlayer.gameweekPoints *= pick.multiplier;\n\t\t\t\tfantasyPlayer.team.captainId = pick.element;\n\t\t\t\tfantasyPlayer.team.captainName = newPlayer.name;\n\t\t\t\tfantasyPlayer.team.captainImage = image;\n\t\t\t}\n\t\t}\n\t\tfantasyPlayer.team.gameweekPoints = totalPoints;\n\t\tfantasyPlayer.team.overallPoints += totalPoints - fantasyPlayer.gameweekTransfersCost;\n\t\treturn fantasyPlayer;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequestService } from '../http-request/http-request.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class GameweekDataService {\n\tconstructor(private httpRequestService: HttpRequestService) {}\n\n\tasync getGameweekData(id: number, gameweek: number): Promise<any> {\n\t\treturn await this.httpRequestService.fetch(\n\t\t\t`https://fantasy.premierleague.com/drf/entry/${id}/event/${gameweek}/picks`\n\t\t);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequestService } from '../http-request/http-request.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class GameweekHistoryService {\n\tconstructor(private httpRequestService: HttpRequestService) {}\n\n\tfetch(id: number) {\n\t\treturn this.httpRequestService.fetch(\n\t\t\t`https://fantasy.premierleague.com/drf/entry/${id}/history`\n\t\t);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { LeaguesService } from './leagues.service';\nimport { MainUserService } from '../main-user/main-user.service';\nimport CustomLeague from 'src/app/Models/CustomLeague';\nimport { Storage } from '@ionic/storage';\nimport League from 'src/app/Models/League';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class CustomLeagueService {\n\tprivate customLeaguesKey = 'custom_leagues';\n\tpublic customLeagues = [];\n\n\tconstructor(private storage: Storage, private leagueService: LeaguesService) {}\n\n\tasync create(leagueName: string, members: number[]) {\n\t\tconst id = this.generateId();\n\t\tconst newCustomLeague = new CustomLeague(id, leagueName, members);\n\t\tthis.saveLeague(newCustomLeague);\n\t}\n\n\tgenerateId() {\n\t\tconst d = new Date();\n\t\treturn d.getTime();\n\t}\n\n\tsaveLeague(customLeague: CustomLeague) {\n\t\tthis.customLeagues.push(customLeague);\n\t\tthis.storage.set(this.customLeaguesKey, this.customLeagues);\n\t}\n\n\tasync fetchLeagueData(league: CustomLeague) {\n\t\t// recreates league so data is fresh\n\t\treturn await this.leagueService.createLeague(league.members, league.name, league.id);\n\t}\n\n\t/**\n   * retrieves league object from storage\n   * @param id league id\n   */\n\tasync getLeague(id: number): Promise<CustomLeague> {\n\t\tconst leagues = await this.storage.get(this.customLeaguesKey);\n\t\treturn leagues.find((league) => league.id === id);\n\t}\n\n\tasync getLeagues() {\n\t\tconst leagues = await this.storage.get(this.customLeaguesKey);\n\t\tthis.customLeagues = leagues || [];\n\t\treturn this.customLeagues;\n\t}\n\n\tremove(league: League) {\n\t\tthis.customLeagues = this.customLeagues.filter((custom) => custom.id !== league.id);\n\t}\n\n\tsaveToDatabase() {\n\t\tthis.storage.set(this.customLeaguesKey, this.customLeagues);\n\t}\n\n\tasync addMemberToLeague(id: number, leagueId: number) {\n\t\tconst custLeague = this.customLeagues.find(league => league.id === leagueId);\n\t\tcustLeague.members.push(id);\n\t\tawait this.saveToDatabase();\n\t\treturn custLeague;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport League from 'src/app/Models/League';\nimport { FantasyPlayerService } from '../fantasy-player/fantasy-player.service';\nimport { HttpRequestService } from '../http-request/http-request.service';\nimport { LiveDataService } from '../live-data/live.data.service';\nimport { StaticDataService } from '../static-data/static.data.service';\nimport { SoccerPlayerService } from '../soccer-player/soccerplayer.service';\nimport FantasyPlayer from 'src/app/Models/FantasyPlayer';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class LeaguesService {\n\tconstructor(\n\t\tprivate staticDataService: StaticDataService,\n\t\tprivate httpRequestService: HttpRequestService,\n\t\tprivate fantasyPlayerService: FantasyPlayerService,\n\t\tprivate liveDataService: LiveDataService,\n\t\tprivate soccerPlayerService: SoccerPlayerService\n\t) {}\n\n\tasync createLeague(members: number[], name: string, id: number = null) {\n\t\tlet currentGameweek = null,\n\t\t\tsoccerPlayers = null;\n\n\t\treturn Promise.all([\n\t\t\tthis.staticDataService.getCurrentGameweek(),\n\t\t\tthis.soccerPlayerService.getPlayers()\n\t\t])\n\t\t\t.then(([ gameweek, players ]) => {\n\t\t\t\tcurrentGameweek = gameweek;\n\t\t\t\tsoccerPlayers = players;\n\t\t\t\treturn this.liveDataService.fetch(currentGameweek);\n\t\t\t})\n\t\t\t.then((liveData) => {\n\t\t\t\treturn Promise.all(\n\t\t\t\t\tmembers.map((memberId: number) =>\n\t\t\t\t\t\tthis.fantasyPlayerService\n\t\t\t\t\t\t\t.createPlayer(memberId, liveData, soccerPlayers, currentGameweek)\n\t\t\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\t\t\t// create new player with just basic info\n\t\t\t\t\t\t\t\tconst p = new FantasyPlayer();\n\t\t\t\t\t\t\t\tp.id = id;\n\t\t\t\t\t\t\t\tp.name = 'failed';\n\t\t\t\t\t\t\t\treturn p;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t})\n\t\t\t.then((fantasyPlayers: any[]) => {\n\t\t\t\tconst membersMap = new Map();\n\t\t\t\t// create map for easy retrieval of memebrs\n\t\t\t\tfor (const player of fantasyPlayers) {\n\t\t\t\t\tif (player) {\n\t\t\t\t\t\tmembersMap.set(player.id, player);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst newLeague = new League(\n\t\t\t\t\tid,\n\t\t\t\t\tname,\n\t\t\t\t\tmembersMap\n\t\t\t\t);\n\t\t\t\treturn newLeague;\n\t\t\t});\n\t}\n\tasync getLeague(id: number): Promise<League> {\n\t\tconst leagueData = await this.httpRequestService.fetch(\n\t\t\t`https://fantasy.premierleague.com/drf/leagues-classic-standings/${id}`\n\t\t);\n\t\tconst membersIds = leagueData.standings.results.map(member => member.entry);\n\t\treturn this.createLeague(membersIds, leagueData.league.name, leagueData.league.id);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequestService } from '../http-request/http-request.service';\n\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class LiveDataService {\n\tconstructor(private httpRequestService: HttpRequestService) {}\n\n\tfetch(gameweek: number): Promise<any> {\n\t\treturn this.httpRequestService.fetch(\n\t\t\t`https://fantasy.premierleague.com/drf/event/${gameweek}/live`\n\t\t);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nimport FantasyPlayer from 'src/app/Models/FantasyPlayer';\nimport { FantasyPlayerService } from '../fantasy-player/fantasy-player.service';\nimport { FcmService } from '../Firebase/fcm.service';\nimport { LiveDataService } from '../live-data/live.data.service';\nimport { StaticDataService } from '../static-data/static.data.service';\nimport { SoccerPlayerService } from '../soccer-player/soccerplayer.service';\nimport { CustomLeagueService } from '../leagues/custom-league.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class MainUserService {\n\tpublic user: FantasyPlayer;\n\tprivate userKey = 'user';\n\n\tconstructor(\n\t\tprivate storage: Storage,\n\t\tprivate fantasyPlayerService: FantasyPlayerService,\n\t\tprivate liveDataService: LiveDataService,\n\t\tprivate staticDataService: StaticDataService,\n\t\tprivate fcmService: FcmService,\n\t\tprivate soccerPlayerService: SoccerPlayerService,\n\t\tprivate customLeagueService: CustomLeagueService\n\t) {}\n\n\tasync loadSavedUser() {\n\t\tthis.user = await this.storage.get(this.userKey);\n\t\treturn this.user;\n\t}\n\n\tasync getSavedUserId() {\n\t\tconst user = await this.storage.get(this.userKey);\n\t\treturn user.id;\n\t}\n\n\tsave() {\n\t\tthis.storage.set(this.userKey, this.user);\n\t}\n\n\t/**\n\t * @description creates the main user of the app\n\t * @param id fpl id of user\n\t */\n\tasync createUser(id: number): Promise<FantasyPlayer> {\n\t\tconst gameweek = await this.staticDataService.getCurrentGameweek();\n\t\tconst liveData = await this.liveDataService.fetch(gameweek);\n\t\tconst soccerPlayers = await this.soccerPlayerService.getPlayers();\n\n\t\treturn await this.fantasyPlayerService\n\t\t\t.createPlayer(id, liveData, soccerPlayers, gameweek)\n\t\t\t.then((user) => {\n\t\t\t\tthis.user = user;\n\t\t\t\tthis.storage.set(this.userKey, user);\n\t\t\t\tthis.updateDeviceToken(this.user.id);\n\t\t\t\treturn user;\n\t\t\t});\n\t}\n\n\tprivate updateDeviceToken(id: number) {\n\t\tthis.fcmService.getToken(id);\n\t}\n\n\tasync updateUser(id: number) {\n\n\t\t// keep custom league and clear rest of the data\n\t\tconst customLeagues = await this.customLeagueService.getLeagues();\n\t\tthis.storage.clear();\n\t\tthis.customLeagueService.customLeagues = customLeagues;\n\t\tthis.customLeagueService.saveToDatabase();\n\n\t\treturn await this.createUser(id);\n\t}\n\n\tgetLivePoints() {}\n}\n"],"sourceRoot":""}